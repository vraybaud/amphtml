workspace(name = "validator")

load("@bazel_tools//tools/build_defs/repo:http.bzl", "http_archive")

http_archive(
    name = "com_google_absl",
    sha256 = "8047c4a3ef5b14ace41a3d424113f96b1878a3a0241e4085d10b717011705311",
    strip_prefix = "abseil-cpp-925a5e681ea1958171ba580c4402e5ce76473cb5",
    urls = ["https://github.com/abseil/abseil-cpp/archive/925a5e681ea1958171ba580c4402e5ce76473cb5.zip"],
)

http_archive(
    name = "com_google_googletest",
    sha256 = "4599154210502714ad841821b9d086431816e5c8bfae90872e43305cc0f12eb2",
    strip_prefix = "googletest-dddb219c3eb96d7f9200f09b0a381f016e6b4562",
    urls = ["https://github.com/google/googletest/archive/dddb219c3eb96d7f9200f09b0a381f016e6b4562.zip"],  # 2019-01-07
)

http_archive(
    name = "com_google_protobuf",
    sha256 = "b091ea7be735c5bf519c3eb04c86e4c9f7fb738f02ebc29e336e3066d5a455f5",
    strip_prefix = "protobuf-18d4a7651b8b74d7e0e5e177c54319530fdd6ddf",
    urls = ["https://github.com/protocolbuffers/protobuf/archive/18d4a7651b8b74d7e0e5e177c54319530fdd6ddf.zip"],
)
load("@com_google_protobuf//:protobuf_deps.bzl", "protobuf_deps")
protobuf_deps()

http_archive(
    name = "com_github_gflags_gflags",
    sha256 = "017e0a91531bfc45be9eaf07e4d8fed33c488b90b58509dbd2e33a33b2648ae6",
    strip_prefix = "gflags-a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd",
    urls = ["https://github.com/gflags/gflags/archive/a738fdf9338412f83ab3f26f31ac11ed3f3ec4bd.zip"],
)

http_archive(
    name = "com_googlesource_code_re2",
    sha256 = "c34bbc4ab12550296c3e289bea6c722de027a5d96748789d76db37c79d9f7b05",
    strip_prefix = "re2-c042630ed8f94c32106d92a6a8deb192dabe558d",
    urls = ["https://github.com/google/re2/archive/c042630ed8f94c32106d92a6a8deb192dabe558d.zip"],
)

# rules_cc defines rules for generating C++ code from Protocol Buffers.
http_archive(
    name = "rules_cc",
    sha256 = "0d060bbfe3446804ca668a807522712fb460200d4eaefb41b4137bf9fbdf3f93",
    strip_prefix = "rules_cc-51b77439a109b8c8f75ad70a130293291ed8b851",
    urls = ["https://github.com/bazelbuild/rules_cc/archive/51b77439a109b8c8f75ad70a130293291ed8b851.zip"],
)
load("@rules_cc//cc:repositories.bzl", "rules_cc_dependencies")
rules_cc_dependencies()

# rules_proto defines abstract rules for building Protocol Buffers.
http_archive(
    name = "rules_proto",
    sha256 = "f5ae0e582238fcd4ea3d0146a3f5f3db9517f8fe24491eab3c105ace53aad1bb",
    strip_prefix = "rules_proto-f9b0b880d1e10e18daeeb168cef9d0f8316fdcb5",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_proto/archive/f9b0b880d1e10e18daeeb168cef9d0f8316fdcb5.tar.gz",
        "https://github.com/bazelbuild/rules_proto/archive/f9b0b880d1e10e18daeeb168cef9d0f8316fdcb5.tar.gz",
    ],
)
load("@rules_proto//proto:repositories.bzl", "rules_proto_dependencies", "rules_proto_toolchains")
rules_proto_dependencies()
rules_proto_toolchains()

http_archive(
    name = "emsdk",
    sha256 = "746ab9ab1be6236800c2ecc92aa19ff359c80e4c7dc8a99f78a563877b6331e9",
    strip_prefix = "emsdk-9347bc393b94a17b93450bbc98bc3f66cef2aeb0/bazel",
    url = "https://github.com/emscripten-core/emsdk/archive/9347bc393b94a17b93450bbc98bc3f66cef2aeb0.tar.gz",
)

load("@emsdk//:deps.bzl", emsdk_deps = "deps")
emsdk_deps()

load("@emsdk//:emscripten_deps.bzl", emsdk_emscripten_deps = "emscripten_deps")
emsdk_emscripten_deps(emscripten_version = "2.0.31")

http_archive(
    name = "com_google_javascript_closure_library",
    sha256 = "90235e587dbc968a854ab11ac358c3a0fa57b4c121f540880419203dfe3cfa46",
    strip_prefix = "closure-library-7818ff7dc0b53555a7fb3c3427e6761e88bde3a2",
    urls = ["https://github.com/google/closure-library/archive/7818ff7dc0b53555a7fb3c3427e6761e88bde3a2.tar.gz"],
)

http_archive(
    name = "io_bazel_rules_closure",
    sha256 = "9498e57368efb82b985db1ed426a767cbf1ba0398fd7aed632fc3908654e1b1e",
    strip_prefix = "rules_closure-0.12.0",
    urls = [
        "https://mirror.bazel.build/github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
        "https://github.com/bazelbuild/rules_closure/archive/0.12.0.tar.gz",
    ],
)

load("@io_bazel_rules_closure//closure:repositories.bzl", "rules_closure_dependencies", "rules_closure_toolchains")
rules_closure_dependencies()
rules_closure_toolchains()

local_repository(
    name = "amphtml-extensions",
    path = "../extensions",
)
